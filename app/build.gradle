import com.jsoniter.JsonIterator
import com.jsoniter.any.Any
import org.ajoberstar.grgit.Grgit

apply plugin: 'com.android.application'
apply plugin: 'com.bugsnag.android.gradle'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def superpowered_sdk_path = properties.getProperty('superpowered.dir')

private static int getCommitCountFromGitHub(String branch, int page) {
    URL url = new URL("https://api.github.com/repos/vatbub/HearingAidAndroid/commits?sha=" + branch + "&page=" + page)
    HttpURLConnection con = (HttpURLConnection) url.openConnection()
    con.setRequestMethod("GET")
    int status = con.getResponseCode()
    if (status != 200) {
        println "GitHub returned status " + status
        return -1
    }

    BufferedReader bufferedReader = new BufferedReader(
            new InputStreamReader(con.getInputStream()))
    String inputLine
    StringBuffer content = new StringBuffer()
    while ((inputLine = bufferedReader.readLine()) != null) {
        content.append(inputLine)
    }
    bufferedReader.close()

    Any commits = JsonIterator.deserialize(content.toString())
    return commits.size()
}

ext {
    // Open the Git repository in the current directory.
    git = Grgit.open(dir: file('..'))

    // Get commit id of HEAD.
    // GIT_COMMIT_COUNT = git.log(includes: ['HEAD']).size()
    // Alternative is using abbreviatedId of head() method.
    // revision = git.head().abbreviatedId


    int page = 1
    int gitHubCommitCount = 0
    int lastResCount = -1
    while (lastResCount != 0) {
        lastResCount = getCommitCountFromGitHub(git.branch.current.name, page)
        page++
        if (lastResCount == -1) {
            println "Unable to get commit count from github, using local repo"
            gitHubCommitCount = 0
            break
        }

        gitHubCommitCount = gitHubCommitCount + lastResCount
    }

    println "GitHub returned " + gitHubCommitCount + " commits"
    int localCommitCount = git.log(includes: ['HEAD']).size()
    GIT_COMMIT_COUNT = Math.max(localCommitCount, gitHubCommitCount)
}

android {
    signingConfigs {
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.github.vatbub.hearingaid"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode GIT_COMMIT_COUNT
        println('Version code is: ' + GIT_COMMIT_COUNT)
        versionName "1.0." + new Date().format('yyyy_MM_dd_HHmm')
        println('Version name is: ' + versionName)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        String bugSnagApiKey = System.getenv("bugSnagApiKey")

        manifestPlaceholders = [bugSnagApiKey: bugSnagApiKey != null ? bugSnagApiKey : "not_specified"]

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            // these platforms cover 99% percent of all Android devices
        }

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-16', '-DANDROID_TOOLCHAIN=clang', '-DANDROID_ARM_NEON=TRUE', '-DANDROID_STL=gnustl_static', "-DPATH_TO_SUPERPOWERED:STRING=${superpowered_sdk_path}"
                cFlags '-O3', '-fsigned-char' // full optimization, char data type is signed
                cppFlags '-fsigned-char', "-I${superpowered_sdk_path}"
            }
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jni']
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            useProguard false
            versionNameSuffix '-release'
        }
        debug {
            jniDebuggable true
            versionNameSuffix '-debug'
            testCoverageEnabled true
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:mediarouter-v7:27.1.1'
    implementation 'com.github.ohoussein.playpauseview:playpauseview:1.0.2'
    implementation 'com.github.vatbub:common.view.motd.core:0.1.6-SNAPSHOT'
    implementation('com.github.vatbub:common.core:0.1.6-SNAPSHOT') {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-s3'
    }
    implementation('com.google.guava:guava:26.0-android') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation 'com.amazonaws:aws-android-sdk-s3:2.7.7'
    implementation 'com.github.apl-devs:appintro:v4.2.2'
    implementation 'com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:0.7.2'
    implementation 'com.android.support:gridlayout-v7:27.1.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    implementation('org.rm3l:maoni:4.1.2@aar') {
        transitive = true
    }
    implementation 'ru.noties:markwon:1.0.3'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.bugsnag:bugsnag-android-ndk:4.9.1'
}
